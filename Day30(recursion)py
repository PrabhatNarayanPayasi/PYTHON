# def factorial(n):
#     if(n==0 or n==1):
#         return 1;
#     return(n*factorial(n-1));
# print(factorial(5));

def fact(a):
    if(a==0 or a==1):
      return(1);
    else:
       return(a*(fact(a-1)));
print(fact(5))


'''
Recursion in python
Recursion is the process of defining something in terms of itself.

Python Recursive Function
In Python, we know that a function can call other functions. 
It is even possible for the function to call itself.
These types of construct are termed as recursive functions.

Example:
def factorial(num): 
    if (num == 1 or num == 0):
        return 1
    else:
        return (num * factorial(num - 1)) 
  
# Driver Code 
num = 7; 
print("Number: ",num)
print("Factorial: ",factorial(num))
Output:
number:  7
Factorial:  5040'''

x = int(input("Enter the number : "))
def fib(x):
    if(x==1):
      return 0;
    if(x==2):
       return 1;
    else:
     return (fib(x-1) + fib(x-2));
print(fib(x))

# x = int(input("Enter the number: "))
# def fib(x):
#     if x == 1:
#         return 0  # The 1st Fibonacci number is 0
#     elif x == 2:
#         return 1  # The 2nd Fibonacci number is 1
#     else:
#         return fib(x - 1) + fib(x - 2)  # Recursively calculate Fibonacci numbers


# print(fib(x))